(()=>{"use strict";var e=document.querySelector(".profile__user-image"),t=document.querySelector(".profile__change-image-btn"),o=document.querySelectorAll(".form__button"),n=(document.querySelectorAll(".popup"),document.querySelector(".profile-popup")),r=document.querySelector(".add-place-popup"),c=document.querySelector(".change-avatar-popup"),u=document.querySelector(".open-image-popup"),i=document.querySelector(".profile__eddit-button"),a=document.querySelector(".profile__add-button"),s=document.querySelectorAll(".popup__close-button"),l=document.querySelector(".form-profile"),d=document.querySelector(".profile__user-name"),f=document.querySelector(".profile__user-status"),m=document.querySelector(".form-place"),p=document.querySelector(".form-avatar"),_=document.querySelector(".form__item_el_user-name"),v=document.querySelector(".form__item_el_user-avatar"),h=document.querySelector(".form__item_el_user-status"),y=document.querySelector(".form__item_el_user-place"),S=document.querySelector(".form__item_el_user-place-url"),b=document.querySelector("#photo-template").content,g=document.querySelector(".photo-grid"),k=document.querySelector(".photo-grid__image_popup"),q=document.querySelector(".photo-grid__place-name_popup");function E(e,t,o){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(o.inputErrorClass),n.classList.remove(o.errorClass),n.textContent=""}function L(e,t,o){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?E(e,t,o):function(e,t,o,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.add(n.inputErrorClass),r.classList.add(n.errorClass),r.textContent=o}(e,t,t.validationMessage,o)}function C(e,t){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?t.removeAttribute("disabled"):t.setAttribute("disabled","disabled")}function x(e){e.classList.remove("popup_opened"),e.removeEventListener("click",P),document.removeEventListener("keydown",j)}function P(e){if(e.target===e.currentTarget){var t=document.querySelector(".popup_opened");t&&t.classList.remove("popup_opened")}}function j(e){if("Escape"===e.key){var t=document.querySelector(".popup_opened");t&&t.classList.remove("popup_opened")}}function A(e){e.classList.add("popup_opened"),e.addEventListener("mousedown",P),document.addEventListener("keydown",j)}var U,T={baseUrl:"https://mesto.nomoreparties.co/v1/plus-cohort-15",headers:{authorization:"a80c9fc1-0c23-4d33-8f6c-044abe54b54c","Content-Type":"application/json"}};function N(e){e?o.forEach((function(e){return e.textContent="Сохранение..."})):o.forEach((function(e){return e.textContent="Сохранить"}))}function O(e,t){e.addEventListener("click",t)}function D(e){g.prepend(function(e){var t,o=b.querySelector(".photo-grid__item").cloneNode(!0),n=o.querySelector(".photo-grid__image"),r=o.querySelector(".photo-grid__place-name"),c=o.querySelector(".photo-grid__like-button"),i=o.querySelector(".photo-grid__like-count"),a=o.querySelector(".photo-grid__delete-button");return r.textContent=e.name,i.textContent=e.likes.length,n.src=e.link,n.alt=e.name,t=e._id,O(c,(function(e){var o;c.classList.contains("photo-grid__like-button_active")?function(e){return fetch("".concat(T.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:T.headers,body:JSON.stringify({likes:"like"})})}(t).then((function(t){if(!t.ok)return Promise.reject("Ошибка: ".concat(t.status));e.target.classList.remove("photo-grid__like-button_active"),i.textContent--})).catch((function(e){console.log(e)})):(o=t,fetch("".concat(T.baseUrl,"/cards/likes/").concat(o),{method:"PUT",headers:T.headers,body:JSON.stringify({likes:"like"})})).then((function(t){if(!t.ok)return Promise.reject("Ошибка: ".concat(t.status));e.target.classList.add("photo-grid__like-button_active"),i.textContent++})).catch((function(e){console.log(e)}))})),O(a,(function(){var e;(e=t,fetch("".concat(T.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:T.headers,body:JSON.stringify({_id:e})})).then((function(e){if(!e.ok)return Promise.reject("Ошибка: ".concat(e.status));o.remove()})).catch((function(e){console.log(e)}))})),O(n,(function(){return t=e,A(u),k.src=t.link,k.alt=t.name,void(q.textContent=t.name);var t})),o}(e))}fetch("".concat(T.baseUrl,"/users/me"),{headers:T.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(t){var o=t._id;d.textContent=t.name,f.textContent=t.about,e.src=t.avatar,fetch("".concat(T.baseUrl,"/cards"),{headers:T.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(e){e.reverse().forEach((function(e){var t,n,r;D(e),t=e,n=o,r=document.querySelector(".photo-grid__delete-button"),t.owner._id!=n&&r.classList.add("photo-grid__delete-button_disabled"),e.likes.forEach((function(e){return function(e,t){var o=document.querySelector(".photo-grid__like-button");e._id==t&&o.classList.add("photo-grid__like-button_active")}(e,o)}))}))})).catch((function(e){console.log(e)}))})).catch((function(e){console.log(e)})),s.forEach((function(e){var t=e.closest(".popup");e.addEventListener("click",(function(){return x(t)}))})),i.addEventListener("click",(function(){return A(n),_.value=d.textContent,void(h.value=f.textContent)})),a.addEventListener("click",(function(){return A(r)})),t.addEventListener("click",(function(){return A(c),void(v.value=e.src)})),l.addEventListener("submit",(function(e){var t,o;e.preventDefault(),d.textContent=_.value,f.textContent=h.value,(t=_.value,o=h.value,fetch("".concat(T.baseUrl,"/users/me"),{method:"PATCH",headers:T.headers,body:JSON.stringify({name:t,about:o})})).then((function(e){if(!e.ok)return Promise.reject("Ошибка: ".concat(e.status));x(n)})).catch((function(e){console.log(e)})).finally((function(e){N(!1)})),N(!0)})),p.addEventListener("submit",(function(t){var o;t.preventDefault(),e.src=v.value,(o=v.value,fetch("".concat(T.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:T.headers,body:JSON.stringify({avatar:o})})).then((function(e){if(!e.ok)return Promise.reject("Ошибка: ".concat(e.status));x(c)})).catch((function(e){console.log(e)})).finally((function(e){N(!1)})),N(!0)})),m.addEventListener("submit",(function(e){e.preventDefault();var t,o,n=y.value,c=S.value;D({name:n,link:c,likes:[]}),(t=n,o=c,fetch("".concat(T.baseUrl,"/cards"),{method:"POST",headers:T.headers,body:JSON.stringify({name:t,link:o})})).then((function(e){if(!e.ok)return Promise.reject("Ошибка: ".concat(e.status));x(r)})).catch((function(e){console.log(e)})).finally((function(e){N(!1)})),N(!0),e.target.reset()})),U={formSelector:".form",inputSelector:".form__item",submitButtonSelector:".form__button",inputErrorClass:"form__item_type_error",errorClass:"form__input-error_active"},Array.from(document.querySelectorAll(U.formSelector)).forEach((function(e){e.addEventListener("submit",(function(e){e.preventDefault()})),function(e,o){var n=Array.from(e.querySelectorAll(o.inputSelector)),r=e.querySelector(o.submitButtonSelector);C(n,r),n.forEach((function(c){i.addEventListener("click",(function(){L(e,c,o),C(n,r)})),a.addEventListener("click",(function(){E(e,c,o),C(n,r)})),t.addEventListener("click",(function(){E(e,c,o),C(n,r)})),c.addEventListener("input",(function(){L(e,c,o),C(n,r)}))}))}(e,U)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,